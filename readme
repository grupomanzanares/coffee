/* 

sqlLite.org

Crear proyecto:
    proyecto con plantilla tabs en ionic
    ionic start coffee
    cambiar nombre en capacitor.config.ts
    cambiar tsconfig.json  "strict": false,



Carpetas
    Crear carpeta assets en la raiz del proyecto:  copiar los archivos para los iconos de la aplicacion.

Instalaciones
    npm install @capacitor/assets --save-dev       basado en la página:  https://capacitorjs.com/docs/guides/splash-screens-and-icons
    npm install @capacitor/device                  basado en la página:  https://capacitorjs.com/docs/apis/device      Me permite obtener la info de mi telefono
    npm install @capacitor/preferences             basado en la pàgina:  https://capacitorjs.com/docs/apis/preferences  Me permite manejar localstorage en el telefono
    
    
Base de datos
    npm install --save @capacitor-community/sqlite                       sqlite Para movil:   https://github.com/capacitor-community/sqlite
    Para poder trabajar en web sqlite para probar:  son extensiones del plugin anterior
        npm install --save jeep-sqlite
        npm install --save sql.js 

Documentacion sql-lite
    https://github.com/capacitor-community/sqlite/tree/master/docs



Se debe pegar el plugin en capacitor.config.ts
                    import type { CapacitorConfig } from '@capacitor/cli';
                    const config: CapacitorConfig = {
                    appId: 'io.class.manager',
                    appName: 'ManagerClass',
                    webDir: 'www',
                    plugins: {
                        CapacitorSQLite: {
                        iosDatabaseLocation: 'Library/CapacitorDatabase',
                        iosIsEncryption: true,
                        iosKeychainPrefix: 'angular-sqlite-app-starter',
                        iosBiometric: {
                            biometricAuth: false,
                            biometricTitle : "Biometric login for capacitor sqlite"
                        },
                        androidIsEncryption: true,
                        androidBiometric: {
                            biometricAuth : false,
                            biometricTitle : "Biometric login for capacitor sqlite",
                            biometricSubTitle : "Log in using your biometric"
                        },
                        electronIsEncryption: true,
                        electronWindowsLocation: "C:\\ProgramData\\CapacitorDatabases",
                        electronMacLocation: "/Volumes/Development_Lacie/Development/Databases",
                        electronLinuxLocation: "Databases"
                        }
                    }
                    }
                    export default config;

// Configuraciones
// For Angular framework
// Copy manually the file sql-wasm.wasm from node_modules/sql.js/dist/sql-wasm.wasm to the src/assets folder of YOUR_APP
"copysqlwasm": "copyfiles -u 3 node_modules/sql.js/dist/sql-wasm.wasm src/assets"
// install: npm install --save-dev copyfiles

// Crear servicio: ionic g service services/sqlite-manager

// En app.module.ts:
import { defineCustomElements as jeepSqlite} from 'jeep-sqlite/loader';
jeepSqlite(window);
schemas: [CUSTOM_ELEMENTS_SCHEMA];

// En app.component.html:
<ion-app>
  <ion-router-outlet></ion-router-outlet>
  <jeep-sqlite *ngIf="isWeb"></jeep-sqlite>
</ion-app>

// En app.component.ts:
import { Component } from '@angular/core';
import { Device } from '@capacitor/device';
import { Platform } from '@ionic/angular';

@Component({
  selector: 'app-root',
  templateUrl: 'app.component.html',
  styleUrls: ['app.component.scss'],
})
export class AppComponent {
  public isWeb: boolean;

  constructor(private platform: Platform) {
    this.isWeb = false;
  }

  initApp() {
    this.platform.ready().then(async () => {
      const info = await Device.getInfo();
      this.isWeb = info.platform == 'web';
    });
  }
}

// ciclos de vida: https://ionicframework.com/docs/angular/lifecycle

// Moment.js: momentjs.com
npm install moment --save

// Crear componente:
ionic g component page/student/tab1/component/form-student
ionic g component pages/class/tab2/component/form-class

ionic g component shared/filter
ionic g component shared/filter/filter-content

// Build Android:
ionic capacitor build android
npx capacitor-assets generate --android

*/
